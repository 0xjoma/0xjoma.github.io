<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-10-26T21:41:34-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">From Bytes to Blogs</title><subtitle>Aspiring cybersecurity expert and student delving deep into the world of digital defense. Discover my academic projects, insights from my learning journey,  and my passion for ensuring a safer online experience.</subtitle><author><name>Jomael Ortiz Perez (0xjoma)</name></author><entry><title type="html">Apply Filters to SQL Queries</title><link href="http://localhost:4000/jekyll/update/2023/10/26/apply-filters-to-sql-queries.html" rel="alternate" type="text/html" title="Apply Filters to SQL Queries" /><published>2023-10-26T00:00:00-05:00</published><updated>2023-10-26T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2023/10/26/apply-filters-to-sql-queries</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/10/26/apply-filters-to-sql-queries.html">&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;

&lt;p&gt;My organization is working to make their system more secure. It is my job to ensure the system is safe, investigate all potential security issues, and update employee computers as needed. The following steps provide examples of how I used SQL with filters to perform security-related tasks.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-after-hours-failed-login-attempts&quot;&gt;Retrieve After Hours Failed Login Attempts&lt;/h2&gt;

&lt;p&gt;There was a potential security incident that occurred after business hours (after 18:00). All after hours login attempts that failed need to be investigated.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I created a SQL query to filter for failed login attempts that occurred after business hours.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\retrieve-after-hours-failed-login-attempts.png&quot; alt=&quot;A screenshot of an SQL query to filter for failed login attempts that occurred after business hours.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. This query filters for failed login attempts that occurred after 18:00. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log_in_attempts&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;clause with an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AND&lt;/code&gt; operator to filter my results to output only login attempts that occurred after 18:00 and were unsuccessful. The first condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;login_time &amp;gt; &apos;18:00&apos;,&lt;/code&gt; which filters for the login attempts that occurred after 18:00. The second condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;success = FALSE&lt;/code&gt;, which filters for the failed login attempts.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-login-attempts-on-specific-dates&quot;&gt;Retrieve Login Attempts On Specific Dates&lt;/h2&gt;

&lt;p&gt;A suspicious event occurred on 2022-05-09. Any login activity that happened on 2022-05-09 or on the day before needs to be investigated.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I created a SQL query to filter for login attempts that occurred on specific dates.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\filter-login-attempts-specific-dates.png&quot; alt=&quot;A screenshot of an SQL query to filter for login attempts that occurred on specific dates.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. This query returns all login attempts that occurred on 2022-05-09 or 2022-05-08. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log_in_attempts&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; clause with an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OR&lt;/code&gt; operator to filter my results to output only login attempts that occurred on either 2022-05-09 or 2022-05-08. The first condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;login_date = &apos;2022-05-09&apos;&lt;/code&gt;, which filters for logins on 2022-05-09. The second condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;login_date = &apos;2022-05-08&apos;&lt;/code&gt;, which filters for logins on 2022-05-08.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-login-attempts-outside-of-mexico&quot;&gt;Retrieve Login Attempts outside of Mexico&lt;/h2&gt;

&lt;p&gt;After investigating the organization’s data on login attempts, I believe there is an issue with the login attempts that occurred outside of Mexico. These login attempts should be investigated.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I created a SQL query to filter for login attempts that occurred outside of Mexico.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\filter-login-attempts-outside-mexico.png&quot; alt=&quot;A screenshot of an SQL query to filter for login attempts that occurred outside of Mexico.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. This query returns all login attempts that occurred in countries other than Mexico. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log_in_attempts&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; clause with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT&lt;/code&gt; to filter for countries other than Mexico. I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MEX%&lt;/code&gt; as the pattern to match because the dataset represents Mexico as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MEX&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MEXICO&lt;/code&gt;. The percentage sign (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;) represents any number of unspecified characters when used with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-employees-in-marketing&quot;&gt;Retrieve Employees In Marketing&lt;/h2&gt;

&lt;p&gt;My team wants to update the computers for certain employees in the Marketing department. To do this, I have to get information on which employee machines to update.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I created a SQL query to filter for employee machines from employees in the Marketing department in the East building.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\retrieve-employees-in-marketing.png&quot; alt=&quot;A screenshot of an SQL query to filter for employee machines from employees in the Marketing department in the East building.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. This query returns all employees in the Marketing department in the East building. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employees&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;clause with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AND&lt;/code&gt; to filter for employees who work in the Marketing department and in the East building. I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;East%&lt;/code&gt; as the pattern to match because the data in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;office&lt;/code&gt; column represents the East building with the specific office number. The first condition is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;department = &apos;Marketing&apos;&lt;/code&gt; portion, which filters for employees in the Marketing department. The second condition is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;office LIKE &apos;East%&apos;&lt;/code&gt; portion, which filters for employees in the East building.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-employees-in-finance-or-sales&quot;&gt;Retrieve Employees In Finance Or Sales&lt;/h2&gt;

&lt;p&gt;The machines for employees in the Finance and Sales departments also need to be updated. Since a different security update is needed, I have to get information on employees only from these two departments.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I created a SQL query to filter for employee machines from employees in the Finance or Sales departments.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\retrieve-employees-in-finance-or-sales.png&quot; alt=&quot;A screenshot of an SQL query to filter for employee machines from employees in the Finance or Sales departments.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. This query returns all employees in the Finance and Sales departments. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employees&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; clause with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OR&lt;/code&gt; to filter for employees who are in the Finance and Sales departments. I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OR&lt;/code&gt; operator instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AND&lt;/code&gt; because I want all employees who are in either department. The first condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;department = &apos;Finance&apos;&lt;/code&gt;, which filters for employees from the Finance department. The second condition is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;department = &apos;Sales&apos;&lt;/code&gt;, which filters for employees from the Sales department.&lt;/p&gt;

&lt;h2 id=&quot;retrieve-all-employees-not-in-it&quot;&gt;Retrieve All Employees Not In IT&lt;/h2&gt;

&lt;p&gt;My team needs to make one more security update on employees who are not in the Information Technology department. To make the update, I first have to get information on these employees.&lt;/p&gt;

&lt;p&gt;The following demonstrates how I created a SQL query to filter for employee machines from employees not in the  Information Technology department.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\apply-filters-sql-queries\employees-not-in-it.png&quot; alt=&quot;A screenshot of an SQL query to filter for employee machines from employees not in the Information Technology department.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first part of the screenshot is my query, and the second part is a portion of the output. The query returns all employees not in the Information Technology department. First, I started by selecting all data from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employees&lt;/code&gt; table. Then, I used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; clause with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT&lt;/code&gt; to filter for employees not in this department.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;I applied filters to SQL queries to get specific information on login attempts and employee machines. I used two different tables, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log_in_attempts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employees&lt;/code&gt;. I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AND&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OR&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT&lt;/code&gt; operators to filter for the specific information needed for each task. I also used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; and the percentage sign (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;) wildcard to filter for patterns.&lt;/p&gt;

&lt;h2 id=&quot;credentials&quot;&gt;Credentials&lt;/h2&gt;

&lt;p&gt;The skills and knowledge demonstrated in this article were acquired from my &lt;a href=&quot;https://www.coursera.org/account/accomplishments/specialization/certificate/AZYF4ATWUNXF&quot; target=&quot;_blank&quot;&gt;Google Cybersecurity Certificate&lt;/a&gt;. Feel free to view it for verification.&lt;/p&gt;</content><author><name>Jomael Ortiz Perez (0xjoma)</name></author><category term="jekyll" /><category term="update" /><summary type="html">Project Description</summary></entry><entry><title type="html">File Permissions in Linux</title><link href="http://localhost:4000/jekyll/update/2023/10/24/file-permissions-in-linux.html" rel="alternate" type="text/html" title="File Permissions in Linux" /><published>2023-10-24T00:00:00-05:00</published><updated>2023-10-24T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2023/10/24/file-permissions-in-linux</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/10/24/file-permissions-in-linux.html">&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;The research team at my organization needs to update the file permissions for certain files and directories within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;projects&lt;/code&gt; directory. The permissions do not currently reflect the level of authorization that should be given. Checking and updating these permissions will help keep their system secure. To complete this task, I performed the following tasks:&lt;/p&gt;

&lt;h2 id=&quot;check-file-and-directory-details&quot;&gt;Check File and Directory Details&lt;/h2&gt;

&lt;p&gt;The following code demonstrates how I used Linux commands to determine the existing permissions set for a specific directory in the file system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\file-permissions-in-linux\check-file-and-directory-details.png&quot; alt=&quot;A screenshot of Linux commands to determine the existing permissions set for a specific directory in the file system.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first line of the screenshot displays the command I entered, and the other lines display the output. The code lists all contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;projects&lt;/code&gt; directory. I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; command with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-la&lt;/code&gt; option to display a detailed listing of the file contents that also returned hidden files. The output of my command indicates that there is one directory named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drafts&lt;/code&gt;, one hidden file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.project_x.txt&lt;/code&gt;, and five other project files. The 10-character string in the first column represents the permissions set on each file or directory.&lt;/p&gt;

&lt;h2 id=&quot;describe-the-permissions-string&quot;&gt;Describe the Permissions String&lt;/h2&gt;

&lt;p&gt;The 10-character string can be deconstructed to determine who is authorized to access the file and their specific permissions. The characters and what they represent are as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;1st character&lt;/strong&gt;: This character is either a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt; or hyphen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt; and indicates the file type. If it’s a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;, it’s a directory. If it’s a hyphen
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt;, it’s a regular file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2nd-4th characters:&lt;/strong&gt; These characters indicate the read &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(r)&lt;/code&gt;, write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(w)&lt;/code&gt;, and execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x)&lt;/code&gt; permissions for the user. When one of these characters is a hyphen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt; instead, it indicates that this permission is not granted to the user.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5th-7th characters:&lt;/strong&gt; These characters indicate the read &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(r)&lt;/code&gt;, write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(w)&lt;/code&gt;, and execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x)&lt;/code&gt; permissions for the group. When one of these characters is a hyphen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt; instead, it indicates that this permission is not granted for the group.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;8th-10th characters:&lt;/strong&gt; These characters indicate the read &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(r)&lt;/code&gt;, write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(w)&lt;/code&gt;, and execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x)&lt;/code&gt; permissions for other. This owner type consists of all other users on the system apart from the user and the group. When one of these characters is a hyphen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt; instead, that indicates that this permission is not granted for other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, the file permissions for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_t.txt&lt;/code&gt; are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-rw-rw-r--&lt;/code&gt;. Since the first character is a hyphen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(-)&lt;/code&gt;, this indicates that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_t.txt&lt;/code&gt; is a file, not a directory. The second, fifth, and eighth characters are all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt;, which indicates that user, group, and other all have read permissions. The third and sixth characters are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w&lt;/code&gt;, which indicates that only the user and group have write permissions. No one has execute permissions for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_t.txt&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;change-file-permissions&quot;&gt;Change File Permissions&lt;/h2&gt;

&lt;p&gt;The organization determined that other shouldn’t have write access to any of their files. To comply with this, I referred to the file permissions that I previously returned. I determined &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_k.txt&lt;/code&gt; must have the write access removed for other.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I used Linux commands to do this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\file-permissions-in-linux\change-file-permissions.png&quot; alt=&quot;A screenshot of Linux commands to change file permissions.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first two lines of the screenshot display the commands I entered, and the other lines display the output of the second command. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod&lt;/code&gt; command changes the permissions on files and directories. The first argument indicates what permissions should be changed, and the second argument specifies the file or directory. In this example, I removed write permissions from other for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_k.txt&lt;/code&gt; file. After this, I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; to review the updates I made.&lt;/p&gt;

&lt;h2 id=&quot;change-file-permissions-on-a-hidden-file&quot;&gt;Change File Permissions On A Hidden File&lt;/h2&gt;

&lt;p&gt;The research team at my organization recently archived &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project_x.txt&lt;/code&gt;. They do not want anyone to have write access to this project, but the user and group should have read access.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I used Linux commands to change the permissions:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\file-permissions-in-linux\change-file-permissions-on-a-hidden-file.png&quot; alt=&quot;A screenshot of Linux commands to change file permissions on a hidden file.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first two lines of the screenshot display the commands I entered, and the other lines display the output of the second command. I know &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.project_x.txt&lt;/code&gt; is a hidden file because it starts with a period &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(.)&lt;/code&gt;. In this example, I removed write permissions from the user and group, and added read permissions to the group. I removed write permissions from the user with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u-w&lt;/code&gt;. Then, I removed write permissions from the group with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;g-w&lt;/code&gt;, and added read permissions to the group with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;g+r&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;change-directory-permissions&quot;&gt;Change Directory Permissions&lt;/h2&gt;

&lt;p&gt;My organization only wants the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;researcher2&lt;/code&gt; user to have access to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drafts&lt;/code&gt; directory and its contents. This means that no one other than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;researcher2&lt;/code&gt; should have execute permissions.&lt;/p&gt;

&lt;p&gt;The following code demonstrates how I used Linux commands to change the permissions:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\file-permissions-in-linux\change-directory-permissions.png&quot; alt=&quot;A screenshot of Linux commands to change directory permissions.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first two lines of the screenshot display the commands I entered, and the other lines display the output of the second command. I previously determined that the group had execute permissions, so I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod&lt;/code&gt; command to remove them. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;researcher2&lt;/code&gt; user already had execute permissions, so they did not need to be added.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;I changed multiple permissions to match the level of authorization my organization wanted for files and directories in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;projects&lt;/code&gt; directory. The first step in this was using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; to check the permissions for the directory. This informed my decisions in the following steps. I then used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod&lt;/code&gt; command multiple times to change the permissions on files and directories.&lt;/p&gt;

&lt;h2 id=&quot;credentials&quot;&gt;Credentials&lt;/h2&gt;

&lt;p&gt;The skills and knowledge demonstrated in this article were acquired from my &lt;a href=&quot;https://www.coursera.org/account/accomplishments/specialization/certificate/AZYF4ATWUNXF&quot; target=&quot;_blank&quot;&gt;Google Cybersecurity Certificate&lt;/a&gt;. Feel free to view it for verification.&lt;/p&gt;</content><author><name>Jomael Ortiz Perez (0xjoma)</name></author><category term="jekyll" /><category term="update" /><summary type="html">Description</summary></entry><entry><title type="html">Incident Report Analysis</title><link href="http://localhost:4000/jekyll/update/2023/10/23/incident-report-analysis.html" rel="alternate" type="text/html" title="Incident Report Analysis" /><published>2023-10-23T00:00:00-05:00</published><updated>2023-10-23T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2023/10/23/incident-report-analysis</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/10/23/incident-report-analysis.html">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;The company experienced a security event when all network services suddenly stopped responding. The cybersecurity team found the disruption was caused by a distributed denial of services (DDoS) attack through a flood of incoming ICMP packets. The team responded by blocking the attack and stopping all non-critical network services, so that critical network services could be restored.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Identify&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;A malicious actor or actors targeted the company with an ICMP flood attack. The entire internal network was affected. All critical network resources needed to be secured and restored to a functioning state.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Protect&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;The cybersecurity team implemented a new firewall rule to limit the rate of incoming ICMP packets and an IDS/IPS system to filter out some ICMP traffic based on suspicious characteristics.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Detect&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;The cybersecurity team configured source IP address verification on the firewall to check for spoofed IP addresses on incoming ICMP packets and implemented network monitoring software to detect abnormal traffic patterns.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Respond&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;For future security events, the cybersecurity team will isolate affected systems to prevent further disruption to the network. They will attempt to restore any critical systems and services that were disrupted by the event. Then, the team will analyze network logs to check for suspicious and abnormal activity. The team will also report all incidents to upper management and appropriate legal authorities, if applicable.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Recover&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;To recover from a DDoS attack by ICMP flooding, access to network services need to be restored to a normal functioning state. In the future, external ICMP flood attacks can be blocked at the firewall. Then, all non-critical network services should be stopped to reduce internal network traffic. Next, critical network services should be restored first. Finally, once the flood of ICMP packets have timed out, all non-critical network systems and services can be brought back online.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;reflection-on-the-incident-report-analysis&quot;&gt;Reflection on the Incident Report Analysis&lt;/h2&gt;

&lt;p&gt;From the incident report analysis, I have gained comprehensive insights into the multifaceted nature of cybersecurity incident management. The event underscored the importance of a structured and well-coordinated response to a security breach, especially when confronted with a DDoS attack. Here is what I have gleaned and the implications of the applications:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Proactive Identification:&lt;/strong&gt; Recognizing threats quickly, as seen in the “Identify” phase, is paramount. The ability to discern that a DDoS attack was in progress, specifically an ICMP flood, allowed for a more targeted response. This emphasizes the need for constant vigilance and monitoring.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Immediate Protection:&lt;/strong&gt; The “Protect” phase highlighted the importance of having preventive measures and the agility to adjust configurations on the fly. The team mitigated further damages by swiftly implementing new firewall rules and leveraging IDS/IPS systems.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Detection Mechanisms:&lt;/strong&gt; The “Detect” section emphasized the significance of proactive monitoring and verification mechanisms. Tools that discern irregularities, like spoofed IP addresses, become invaluable assets in maintaining a secure network environment.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Structured Response:&lt;/strong&gt; Reacting to an incident involves more than immediate countermeasures. The “Respond” phase outlined the broader scope of actions, including system isolation, restoration, and stakeholder communication. This holistic approach ensures that the organization remains informed and prepared while technical challenges are addressed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recovery and Resilience:&lt;/strong&gt; The final “Recover” step underscored the need for a strategic approach to system restoration. Beyond just bringing systems back online, there is an evident emphasis on doing so methodically, prioritizing critical services, and ensuring future resilience against similar attacks.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In conclusion, this incident report analysis has reinforced the understanding that cybersecurity is not just about prevention but also about effective management when breaches occur. The structured approach to identifying, protecting, detecting, responding, and recovering provides a robust framework that ensures the organization’s technical safety, operational continuity, and reputation integrity.&lt;/p&gt;

&lt;h2 id=&quot;credentials&quot;&gt;Credentials&lt;/h2&gt;

&lt;p&gt;The skills and knowledge demonstrated in this article were acquired from my &lt;a href=&quot;https://www.coursera.org/account/accomplishments/specialization/certificate/AZYF4ATWUNXF&quot; target=&quot;_blank&quot;&gt;Google Cybersecurity Certificate&lt;/a&gt;. Feel free to view it for verification.&lt;/p&gt;</content><author><name>Jomael Ortiz Perez (0xjoma)</name></author><category term="jekyll" /><category term="update" /><summary type="html">    Summary The company experienced a security event when all network services suddenly stopped responding. The cybersecurity team found the disruption was caused by a distributed denial of services (DDoS) attack through a flood of incoming ICMP packets. The team responded by blocking the attack and stopping all non-critical network services, so that critical network services could be restored. Identify A malicious actor or actors targeted the company with an ICMP flood attack. The entire internal network was affected. All critical network resources needed to be secured and restored to a functioning state. Protect The cybersecurity team implemented a new firewall rule to limit the rate of incoming ICMP packets and an IDS/IPS system to filter out some ICMP traffic based on suspicious characteristics. Detect The cybersecurity team configured source IP address verification on the firewall to check for spoofed IP addresses on incoming ICMP packets and implemented network monitoring software to detect abnormal traffic patterns. Respond For future security events, the cybersecurity team will isolate affected systems to prevent further disruption to the network. They will attempt to restore any critical systems and services that were disrupted by the event. Then, the team will analyze network logs to check for suspicious and abnormal activity. The team will also report all incidents to upper management and appropriate legal authorities, if applicable. Recover To recover from a DDoS attack by ICMP flooding, access to network services need to be restored to a normal functioning state. In the future, external ICMP flood attacks can be blocked at the firewall. Then, all non-critical network services should be stopped to reduce internal network traffic. Next, critical network services should be restored first. Finally, once the flood of ICMP packets have timed out, all non-critical network systems and services can be brought back online.</summary></entry><entry><title type="html">Setting Up Kali Linux on a Bootable USB Device for macOS/OS X</title><link href="http://localhost:4000/jekyll/update/2023/10/18/setting-up-kali-linux.html" rel="alternate" type="text/html" title="Setting Up Kali Linux on a Bootable USB Device for macOS/OS X" /><published>2023-10-18T00:00:00-05:00</published><updated>2023-10-18T00:00:00-05:00</updated><id>http://localhost:4000/jekyll/update/2023/10/18/setting-up-kali-linux</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/10/18/setting-up-kali-linux.html">&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;With my MacBook Air 2016 no longer receiving support for future macOS updates and faced with storage constraints, I took the initiative to repurpose a spare My Passport Ultra 2TB hard drive from my office inventory. This guide outlines the process of creating a Kali Linux bootable USB device using this hard drive on a macOS environment.&lt;/p&gt;

&lt;h2 id=&quot;benefits-of-using-a-usb-bootable-kali-linux&quot;&gt;Benefits of Using a USB Bootable Kali Linux&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Non-Destructive&lt;/strong&gt;: One of the primary advantages of using a bootable USB is its non-destructive nature. Booting from the USB makes no alterations to the host system’s hard drive or the installed OS. This means that there are no risks of accidentally corrupting or erasing essential data. To revert to the original system settings, simply eject the Kali Live USB drive and reboot the machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portability&lt;/strong&gt;: With a bootable Kali Linux USB, you have the power of an entire operating system in your pocket. Whether you’re traveling, at a friend’s place, or in need of a secure environment on a public computer, you can boot into Kali Linux within minutes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customizability&lt;/strong&gt;: If the default Kali Linux distribution doesn’t suit your needs, you aren’t stuck with it. You have the option to craft a custom Kali Linux ISO image tailored to your requirements and flash it onto the USB drive using the same procedures outlined in this guide.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Potential for Persistence&lt;/strong&gt;: While a basic Kali Live USB drive is ephemeral by design (meaning data won’t persist across reboots), with some additional setup, you can configure it to have persistent storage. This is invaluable for ongoing projects where you need to save data, tools, or configurations across multiple sessions.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A MacBook Air 2016 or any other Mac computer with available USB ports.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A My Passport Ultra 2TB hard drive or any USB drive with sufficient storage (minimum 8GB recommended for Kali Linux, though more is preferable for additional tools and persistent storage).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;USB to Ethernet Adapter: Essential if your Mac computer does not have an Ethernet port, especially since some wireless cards may not be immediately compatible with Kali Linux.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Kali Linux ISO Image: You can download the latest version from the official Kali website.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;macOS Terminal: We’ll primarily use the built-in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; command to flash the ISO image onto the USB drive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Balena Etcher (Optional): If you prefer a graphical interface or encounter issues with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; command, you can use Balena Etcher or a similar program as a secondary option. For this documentation I will focus on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; command.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A working macOS/OS X installation to perform the setup.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Optional but Recommended&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;An external keyboard and mouse if you plan to use Kali Linux extensively, as not all built-in Mac input devices are fully supported.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reliable internet connection for downloading tools, updates, and any other necessary files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Backup of any important data on the USB drive, as the process will erase all existing data on the drive.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Skills and Knowledge&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Basic familiarity with the macOS terminal is essential, especially as we are primarily using command-line operations with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; command.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Understanding disk partitioning can be useful, especially if you plan on configuring persistent storage or multiple boot options on your USB drive.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Although the process of imaging Kali on a USB drive is very easy, you can just as easily overwrite a disk drive you didn’t intend to with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; if you do not understand what you are doing, or if you specify an incorrect output path. Double-check what you’re doing before you do it, it’ll be too late afterwards.&lt;/p&gt;

&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Without the USB drive plugged into the system, open a Terminal window, and type the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diskutil list&lt;/code&gt; at the command prompt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; You will get a list of the device paths of the disks mounted on your system, along with information on the partitions on each of the disks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The reason we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diskutil list&lt;/code&gt; without the USB drive plugged in is to see what is currently on the system. This will allow us to easily identify the new disk when plugged in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Plug in your USB device to your Apple computer’s USB port and run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diskutil list&lt;/code&gt; a second time. Your USB drive’s path will most likely be the last one. In any case, it will be one which wasn’t present before. For me is /dev/disk4 which wasn’t previously present (It maybe be different for you).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Unmount the drive. For me that would be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diskutil unmountDisk /dev/disk4&lt;/code&gt; (do not simply copy this, verify the correct path on your own system).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; If necessary change directory, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; where the Kali ISO file is stored.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Proceed to image the Kali ISO file to the USB device.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo dd if=kali-linux-2023.3-live-amd64.iso of=/dev/rdisk4 bs=4M status=progress&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you get the following error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd: invalid number &apos;4M&apos;&lt;/code&gt;, simply change the ‘4M’ to ‘4m’. Another potential error could be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status=progress&lt;/code&gt; does not work on your version of macOS. Remove &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status=progress&lt;/code&gt; and instead use 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL+T &lt;/code&gt;to measure status.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this guide, we walked through the process of creating a bootable Kali Linux USB drive on a macOS/OS X system. By leveraging the built-in utilities of macOS, we were able to prepare and flash a USB drive with the Kali Linux ISO, turning it into a portable and powerful tool for penetration testing and cybersecurity tasks.&lt;/p&gt;

&lt;h2 id=&quot;source&quot;&gt;Source&lt;/h2&gt;

&lt;p&gt;The skills and knowledge demonstrated in this article were acquired from &lt;a href=&quot;https://www.kali.org/docs/usb/live-usb-install-with-mac/&quot; target=&quot;_blank&quot;&gt;Making a Kali Bootable USB Drive (macOS/OS X)&lt;/a&gt;. Feel free to view it for verification.&lt;/p&gt;</content><author><name>Jomael Ortiz Perez (0xjoma)</name></author><category term="jekyll" /><category term="update" /><summary type="html">Description</summary></entry></feed>